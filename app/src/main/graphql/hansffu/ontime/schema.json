{
  "__schema": {
    "queryType": {
      "name": "QueryType"
    },
    "mutationType": null,
    "subscriptionType": null,
    "types": [
      {
        "kind": "OBJECT",
        "name": "QueryType",
        "description": null,
        "fields": [
          {
            "name": "trip",
            "description": "Input type for executing a travel search for a trip between two locations.\nReturns trip patterns describing suggested alternatives for the trip.",
            "args": [
              {
                "name": "dateTime",
                "description": "Date and time for the earliest time the user is willing to start the journey\n(if arriveBy=false/not set) or the latest acceptable time of arriving\n(arriveBy=true). Defaults to now",
                "type": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "from",
                "description": "The start location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "Location",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "to",
                "description": "The end location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "Location",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "wheelchair",
                "description": "Whether the trip must be wheelchair accessible.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "numTripPatterns",
                "description": "The maximum number of trip patterns to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "3"
              },
              {
                "name": "maximumWalkDistance",
                "description": "DEPRECATED - Use maxPreTransitWalkDistance/maxTransferWalkDistance instead.\nThe maximum distance (in meters) the user is willing to walk. Note that trip\npatterns with longer walking distances will be penalized, but not altogether\ndisallowed. Maximum allowed value is 15000 m",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "5000"
              },
              {
                "name": "maxTransferWalkDistance",
                "description": "The maximum walk distance allowed for transfers.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "2000"
              },
              {
                "name": "walkSpeed",
                "description": "The maximum walk speed along streets, in meters per second",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "1.3"
              },
              {
                "name": "bikeSpeed",
                "description": "The maximum bike speed along streets, in meters per second",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "5"
              },
              {
                "name": "optimisationMethod",
                "description": "The set of characteristics that the user wants to optimise for -- defaults to quick",
                "type": {
                  "kind": "ENUM",
                  "name": "OptimisationMethod",
                  "ofType": null
                },
                "defaultValue": "quick"
              },
              {
                "name": "arriveBy",
                "description": "Whether the trip should depart at dateTime (false, the default), or arrive at dateTime.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "vias",
                "description": "An ordered list of intermediate locations to be visited.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "Location",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "preferred",
                "description": "Parameters for indicating authorities or lines that preferably should be\nused in trip patters. A cost is applied to boarding nonpreferred authorities\nor lines (otherThanPreferredRoutesPenalty).",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputPreferred",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "unpreferred",
                "description": "Parameters for indicating authorities or lines that preferably should not be\nused in trip patters. A cost is applied to boarding nonpreferred authorities\nor lines (otherThanPreferredRoutesPenalty).",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputUnpreferred",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "banned",
                "description": "Parameters for indicating authorities, lines or quays not be used in the trip patterns",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputBanned",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "whiteListed",
                "description": "Parameters for indicating the only authorities, lines or quays to be used in the trip patterns",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputWhiteListed",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "transferPenalty",
                "description": "An extra penalty added on transfers (i.e. all boardings except the first\none). The transferPenalty is used when a user requests even less transfers.\nIn the latter case, we don't actually optimise for fewest transfers, as this\ncan lead to absurd results. Consider a trip in New York from Grand Army\nPlaza (the one in Brooklyn) to Kalustyan's at noon. The true lowest\ntransfers trip pattern is to wait until midnight, when the 4 train runs\nlocal the whole way. The actual fastest trip pattern is the 2/3 to the 4/5\nat Nevins to the 6 at Union Square, which takes half an hour. Even someone\noptimise for fewest transfers doesn't want to wait until midnight. Maybe\nthey would be willing to walk to 7th Ave and take the Q to Union Square,\nthen transfer to the 6. If this takes less than transferPenalty seconds,\nthen that's what we'll return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "0"
              },
              {
                "name": "modes",
                "description": "The set of modes that a user is willing to use. Defaults to [air, bus,\ncableway, water, funicular, lift, rail, metro, tram, coach, transit, foot]",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Mode",
                    "ofType": null
                  }
                },
                "defaultValue": "[foot, tram, metro, rail, bus, water, cableway, lift, funicular, transit, air, coach]"
              },
              {
                "name": "transportSubmodes",
                "description": "Optional set of allowed submodes per transport mode provided in 'modes'. If\nat least one submode is set for a transport mode all submodes not set will\nbe disregarded. Note that transportMode must also be included in 'modes' for\nthe submodes to be allowed",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "TransportSubmodeFilter",
                    "ofType": null
                  }
                },
                "defaultValue": "[]"
              },
              {
                "name": "allowBikeRental",
                "description": "Is bike rental allowed?",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "minimumTransferTime",
                "description": "A global minimum transfer time (in seconds) that specifies the minimum\namount of time that must pass between exiting one public transport vehicle\nand boarding another. This time is in addition to time it might take to walk between stops.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "120"
              },
              {
                "name": "maximumTransfers",
                "description": "Maximum number of transfers",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "10"
              },
              {
                "name": "ignoreRealtimeUpdates",
                "description": "When true, realtime updates are ignored during this search.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "includePlannedCancellations",
                "description": "When true, service journeys cancelled in scheduled route data will be included during this search.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "ignoreInterchanges",
                "description": "DEPRECATED - For debugging only. Ignores interchanges defined in timetable data.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "locale",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "Locale",
                  "ofType": null
                },
                "defaultValue": "no"
              },
              {
                "name": "heuristicStepsPerMainStep",
                "description": "Search algorithm tuning parameter.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "8"
              },
              {
                "name": "compactLegsByReversedSearch",
                "description": "Whether legs should be compacted by performing a reversed search. Experimental argument, will be removed!.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "true"
              },
              {
                "name": "reverseOptimizeOnTheFly",
                "description": "For debugging only.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "maxPreTransitTime",
                "description": "Maximum time for the ride part of \"kiss and ride\" and \"ride and kiss\".",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "600"
              },
              {
                "name": "preTransitPenalty",
                "description": "A one time jump in cost for exceeding the maximum time of the ride part of \"kiss and ride\" and \"ride and kiss\".",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "300"
              },
              {
                "name": "preTransitOverageRate",
                "description": "A multiplier in cost when over the maximum time of the ride part of \"kiss and ride\" and \"ride and kiss\".",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "10"
              },
              {
                "name": "preTransitReluctance",
                "description": "How much worse driving before and after transit is than riding on transit.\nApplies to ride and kiss, kiss and ride and park and ride.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "4"
              },
              {
                "name": "maxPreTransitWalkDistance",
                "description": "Max walk distance for access/egress legs.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "1.7976931348623157e+308"
              },
              {
                "name": "useFlex",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "banFirstServiceJourneysFromReuseNo",
                "description": "How many service journeys used in a tripPatterns should be banned from\ninclusion in successive tripPatterns. Counting from start of tripPattern.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "2147483647"
              },
              {
                "name": "walkBoardCost",
                "description": "DEPRECATED - ONLY FOR TESTING. Cost applied each time transit is boarded.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "600"
              },
              {
                "name": "walkReluctance",
                "description": "Walk cost is multiplied by this value. This is the main parameter to use for limiting walking.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "4"
              },
              {
                "name": "waitReluctance",
                "description": "DEPRECATED - ONLY FOR TESTING. Wait cost is multiplied by this value.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "0.8"
              },
              {
                "name": "ignoreMinimumBookingPeriod",
                "description": "Ignore the MinimumBookingPeriod defined on the ServiceJourney and allow\nitineraries to start immediately after the current time.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "transitDistanceReluctance",
                "description": "The extra cost per meter that is travelled by transit. This is a cost point peter meter, so it should in most\ncases be a very small fraction. The purpose of assigning a cost to distance is often because it correlates with\nfare prices and you want to avoid situations where you take detours or travel back again even if it is\ntechnically faster. Setting this value to 0 turns off the feature altogether.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": "0"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlace",
            "description": "Get a single stopPlace based on its id)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "StopPlace",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlaces",
            "description": "Get all stopPlaces",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StopPlace",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlacesByBbox",
            "description": "Get all stop places within the specified bounding box",
            "args": [
              {
                "name": "minimumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "minimumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maximumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maximumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "authority",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "multiModalMode",
                "description": "MultiModalMode for query. To control whether multi modal parent stop places,\ntheir mono modal children or both are included in the response. Does not\naffect mono modal stop places that do not belong to a multi modal stop place.",
                "type": {
                  "kind": "ENUM",
                  "name": "MultiModalMode",
                  "ofType": null
                },
                "defaultValue": "parent"
              },
              {
                "name": "filterByInUse",
                "description": "If true only stop places with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StopPlace",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": "Get a single quay based on its id)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Get all quays",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quaysByBbox",
            "description": "Get all quays within the specified bounding box",
            "args": [
              {
                "name": "minimumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "minimumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maximumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maximumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "authority",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filterByInUse",
                "description": "If true only quays with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quaysByRadius",
            "description": "Get all quays within the specified radius from a location. The returned type has two fields quay and distance",
            "args": [
              {
                "name": "latitude",
                "description": "Latitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "longitude",
                "description": "Longitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "radius",
                "description": "Radius (in meters) to search for from the specified location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "authority",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "fetching only nodes before this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "fetching only nodes after this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "first",
                "description": "fetching only the first certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "fetching only the last certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "quayAtDistanceConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nearest",
            "description": "Get all places (quays, stop places, car parks etc. with coordinates) within\nthe specified radius from a location. The returned type has two fields place\nand distance. The search is done by walking so the distance is according to\nthe network of walkables.",
            "args": [
              {
                "name": "latitude",
                "description": "Latitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "longitude",
                "description": "Longitude of the location",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "maximumDistance",
                "description": "Maximum distance (in meters) to search for from the specified location. Default is 2000m.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "2000"
              },
              {
                "name": "maximumResults",
                "description": "Maximum number of results. Search is stopped when this limit is reached. Default is 20.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "20"
              },
              {
                "name": "filterByPlaceTypes",
                "description": "Only include places of given types if set. Default accepts all types",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "FilterPlaceType",
                    "ofType": null
                  }
                },
                "defaultValue": "[quay, stopPlace, bicycleRent, bikePark, carPark]"
              },
              {
                "name": "filterByModes",
                "description": "Only include places that include this mode. Only checked for places with mode i.e. quays, departures.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Mode",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "filterByInUse",
                "description": "Only affects queries for quays and stop places. If true only quays and stop\nplaces with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "filterByIds",
                "description": "Only include places that match one of the given ids.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputFilters",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "multiModalMode",
                "description": "MultiModalMode for query. To control whether multi modal parent stop places,\ntheir mono modal children or both are included in the response. Does not\naffect mono modal stop places that do not belong to a multi modal stop\nplace. Only applicable for placeType StopPlace",
                "type": {
                  "kind": "ENUM",
                  "name": "MultiModalMode",
                  "ofType": null
                },
                "defaultValue": "parent"
              },
              {
                "name": "before",
                "description": "fetching only nodes before this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "fetching only nodes after this node (exclusive)",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "first",
                "description": "fetching only the first certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "fetching only the last certain number of nodes",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "placeAtDistanceConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": "Get an authority by ID",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorities",
            "description": "Get all authorities",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Authority",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": "Get a operator by ID",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operators",
            "description": "Get all operators",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Operator",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "organisation",
            "description": null,
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Organisation",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use 'authority' instead."
          },
          {
            "name": "organisations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Organisation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Use 'authorities' instead."
          },
          {
            "name": "line",
            "description": "Get a single line based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "Get all lines",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "name",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "publicCode",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "publicCodes",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "transportModes",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "TransportMode",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "authorities",
                "description": "Set of ids of authorities to fetch lines for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": "Get a single service journey based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": "Get all service journeys",
            "args": [
              {
                "name": "lines",
                "description": "Set of ids of lines to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "privateCodes",
                "description": "Set of ids of private codes to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "activeDates",
                "description": "Set of ids of active dates to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Date",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "authorities",
                "description": "Set of ids of authorities to fetch serviceJourneys for.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStations",
            "description": "Get a single bike rental station based on its id",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikeRentalStation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStation",
            "description": "Get all bike rental stations",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStationsByBbox",
            "description": "Get all bike rental stations within the specified bounding box.",
            "args": [
              {
                "name": "minimumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "minimumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maximumLatitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maximumLongitude",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikeRentalStation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "Get a single bike park based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParks",
            "description": "Get all bike parks",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BikePark",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carPark",
            "description": "Get a single car park based on its id",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CarPark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carParks",
            "description": "Get all car parks",
            "args": [
              {
                "name": "ids",
                "description": null,
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CarPark",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routingParameters",
            "description": "Get default routing parameters.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "RoutingParameters",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": "Get all notices",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Notice",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all active situations",
            "args": [
              {
                "name": "authorities",
                "description": "Filter by reporting authorities.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "severities",
                "description": "Filter by severity.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Severity",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "DateTime",
        "description": "DateTime format accepting ISO dates. Return values on format: yyyy-MM-dd'T'HH:mm:ssXXXX. Example: 2017-04-23T18:25:43+0100",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "Location",
        "description": "Input format for specifying a location through either a place reference (id),\ncoordinates or both. If both place and coordinates are provided the place ref\nwill be used if found, coordinates will only be used if place is not known.",
        "fields": null,
        "inputFields": [
          {
            "name": "name",
            "description": "The name of the location.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "place",
            "description": "Id for the place.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "coordinates",
            "description": "Coordinates for the location",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "InputCoordinates",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputCoordinates",
        "description": "Input type for coordinates in the WGS84 system",
        "fields": null,
        "inputFields": [
          {
            "name": "latitude",
            "description": "The latitude of the place.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "longitude",
            "description": "The longitude of the place.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). ",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. ",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "OptimisationMethod",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "quick",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "safe",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flat",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "greenways",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "triangle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transfers",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputPreferred",
        "description": "Preferences for trip search.",
        "fields": null,
        "inputFields": [
          {
            "name": "lines",
            "description": "Set of ids of lines preferred by user.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "authorities",
            "description": "Set of ids of authorities preferred by user.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "organisations",
            "description": "Deprecated! Use 'authorities' instead.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "otherThanPreferredLinesPenalty",
            "description": "Penalty added for using a line that is not preferred if user has set any line\nas preferred. In number of seconds that user is willing to wait for preferred line.",
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "defaultValue": "300"
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputUnpreferred",
        "description": "Negative preferences for trip search. Unpreferred elements may still be used in\nsuggested trips if alternatives are not desirable, see InputBanned for hard limitations.",
        "fields": null,
        "inputFields": [
          {
            "name": "lines",
            "description": "Set of ids of lines user prefers not to use.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "authorities",
            "description": "Set of ids of authorities user prefers not to use.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "organisations",
            "description": "Deprecated! Use 'authorities' instead.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputBanned",
        "description": "Filter trips by disallowing trip patterns involving certain elements",
        "fields": null,
        "inputFields": [
          {
            "name": "lines",
            "description": "Set of ids for lines that should not be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "authorities",
            "description": "Set of ids for authorities that should not be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "organisations",
            "description": "Deprecated! Use 'authorities' instead.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "quays",
            "description": "Set of ids of quays that should not be allowed for boarding or alighting. Trip\npatterns that travel through the quay will still be permitted.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "quaysHard",
            "description": "Set of ids of quays that should not be allowed for boarding, alighting or traveling thorugh.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          },
          {
            "name": "serviceJourneys",
            "description": "Set of ids of service journeys that should not be used.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": "[]"
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputWhiteListed",
        "description": "Filter trips by only allowing trip patterns involving certain elements. If both\nlines and authorities are specificed, only one must be valid for each trip to be used.",
        "fields": null,
        "inputFields": [
          {
            "name": "lines",
            "description": "Set of ids for lines that should be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorities",
            "description": "Set of ids for authorities that should be used",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "organisations",
            "description": "Deprecated! Use 'authorities' instead.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Mode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "air",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bicycle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "water",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "funicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "metro",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transit",
            "description": "Any for of public transportation",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "foot",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car_park",
            "description": "Combine with foot and transit for park and ride.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car_dropoff",
            "description": "Combine with foot and transit for kiss and ride.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "car_pickup",
            "description": "Combine with foot and transit for ride and kiss.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransportSubmodeFilter",
        "description": "Filter trips by allowing only certain transport submodes per mode.",
        "fields": null,
        "inputFields": [
          {
            "name": "transportMode",
            "description": "Set of ids for lines that should be used",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "TransportMode",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "transportSubmodes",
            "description": "Set of transport submodes allowed for transport mode.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "TransportSubmode",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "TransportMode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "air",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "water",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "funicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "metro",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "coach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "unknown",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "TransportSubmode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "unknown",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "undefined",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domesticFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intercontinentalFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domesticScheduledFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intercontinentalCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roundTripCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "helicopterService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "domesticCharterFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SchengenAreaFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airshipService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shortHaulInternationalFlight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "canalBarge",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expressBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nightBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "postBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specialNeedsBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mobilityBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mobilityBusForRegisteredDisabled",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highFrequencyBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dedicatedLaneBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolAndPublicServiceBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "railReplacementBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "demandAndResponseBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airportLinkBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nationalCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specialCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "touristCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "commuterCoach",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "funicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "streetCableCar",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allFunicularServices",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "undefinedFunicular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "metro",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tube",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "urbanRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cityTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trainTram",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "telecabin",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableCar",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "chairLift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dragLift",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "telecabinLink",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "local",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highSpeedRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "suburbanRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interregionalRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longDistance",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "international",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sleeperRailService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nightRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carTransportRailService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "touristRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airportLinkRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "railShuttle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "replacementRailService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specialTrain",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "crossCountryRail",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rackAndPinionRailway",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nationalCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localCarFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "internationalPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nationalPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "regionalPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "localPassengerFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "postBoat",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trainFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "roadFerryLink",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "airportBoatLink",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highSpeedVehicleService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highSpeedPassengerService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "sightseeingService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "schoolBoat",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cableFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "riverBus",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scheduledFerry",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shuttleFerryService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "communalTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "charterTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waterTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "railTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeTaxi",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "blackCab",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "miniCab",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allTaxiServices",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireCar",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireVan",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireMotorbike",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hireCycle",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allHireVehicles",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Locale",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "no",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "us",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Trip",
        "description": "Description of a travel between two places.",
        "fields": [
          {
            "name": "dateTime",
            "description": "The time and date of travel",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fromPlace",
            "description": "The origin",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toPlace",
            "description": "The destination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripPatterns",
            "description": "A list of possible trip patterns",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TripPattern",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "messageEnums",
            "description": "A list of possible error messages as enum",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "messageStrings",
            "description": "A list of possible error messages in cleartext",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "debugOutput",
            "description": "Information about the timings for the trip generation",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "debugOutput",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Place",
        "description": "Common super class for all places (stop places, quays, car parks, bike parks and bike rental stations )",
        "fields": [
          {
            "name": "name",
            "description": "For transit quays, the name of the quay. For points of interest, the name of the POI.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vertexType",
            "description": "Type of vertex. (Normal, Bike sharing station, Bike P+R, Transit quay) Mostly\nused for better localization of bike sharing and P+R station names",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "VertexType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": "The latitude of the place.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": "The longitude of the place.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": "The quay related to the place.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStation",
            "description": "The bike rental station related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "The bike parking related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carPark",
            "description": "The car parking related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "CarPark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "VertexType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "normal",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transit",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeShare",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parkAndRide",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Quay",
        "description": "A place such as platform, stance, or quayside where passengers have access to PT vehicles.",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlace",
            "description": "The stop place to which this quay belongs to.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StopPlace",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairAccessible",
            "description": "Whether this quay is suitable for wheelchair boarding.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": "Public code used to identify this quay within the stop place. For instance a platform code.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": "List of lines servicing this quay",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Line",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPatterns",
            "description": "List of journey patterns servicing this quay",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "JourneyPattern",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedCalls",
            "description": "List of visits to this quay as part of vehicle journeys.",
            "args": [
              {
                "name": "startTime",
                "description": "DateTime for when to fetch estimated calls from. Default value is current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "timeRange",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400"
              },
              {
                "name": "numberOfDepartures",
                "description": "Limit the total number of departures returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "5"
              },
              {
                "name": "numberOfDeparturesPerLineAndDestinationDisplay",
                "description": "Limit the number of departures per line and destination display returned.\nThe parameter is only applied when the value is between 1 and\n'numberOfDepartures'.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "omitNonBoarding",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "whiteListed",
                "description": "Parameters for indicating the only authorities and/or lines or quays to list estimatedCalls for",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputWhiteListed",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "EstimatedCall",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the quay",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopType",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "StopType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleArea",
            "description": "Geometry for flexible area.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Coordinates",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "PlaceInterface",
        "description": "Interface for places, i.e. quays, stop places, parks",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Quay",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "StopPlace",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikeRentalStation",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikePark",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CarPark",
            "ofType": null
          }
        ]
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StopPlace",
        "description": "Named place where public transport may be accessed. May be a building complex (e.g. a station) or an on-street location.",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairBoarding",
            "description": "Whether this stop place is suitable for wheelchair boarding.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "weighting",
            "description": "Relative weighting of this stop with regards to interchanges.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "InterchangeWeighting",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tariffZones",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TariffZone",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportMode",
            "description": "The transport mode serviced by this stop place.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportMode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": "The transport submode serviced by this stop place.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "adjacentSites",
            "description": "This stop place's adjacent sites",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Returns all quays that are children of this stop place",
            "args": [
              {
                "name": "filterByInUse",
                "description": "If true only quays with at least one visiting line are included.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Quay",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parent",
            "description": "Returns parent stop for this stop",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "StopPlace",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedCalls",
            "description": "List of visits to this stop place as part of vehicle journeys.",
            "args": [
              {
                "name": "startTime",
                "description": "DateTime for when to fetch estimated calls from. Default value is current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "timeRange",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400"
              },
              {
                "name": "numberOfDepartures",
                "description": "Limit the total number of departures returned.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "5"
              },
              {
                "name": "numberOfDeparturesPerLineAndDestinationDisplay",
                "description": "Limit the number of departures per line and destination display returned.\nThe parameter is only applied when the value is between 1 and\n'numberOfDepartures'.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "omitNonBoarding",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "whiteListed",
                "description": "Parameters for indicating the only authorities and/or lines or quays to list estimatedCalls for",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputWhiteListed",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "EstimatedCall",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "WheelchairBoarding",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "noInformation",
            "description": "There is no accessibility information for the stopPlace/quay.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possible",
            "description": "Boarding wheelchair-accessible serviceJourneys is possible at this stopPlace/quay.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notPossible",
            "description": "Wheelchair boarding/alighting is not possible at this stop.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "InterchangeWeighting",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "preferredInterchange",
            "description": "Highest priority interchange.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "recommendedInterchange",
            "description": "Second highest priority interchange.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interchangeAllowed",
            "description": "Third highest priority interchange.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noInterchange",
            "description": "Interchange not allowed.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TariffZone",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "EstimatedCall",
        "description": "List of visits to quays as part of vehicle journeys. Updated with real time information where available",
        "fields": [
          {
            "name": "quay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedArrivalTime",
            "description": "Scheduled time of arrival at quay. Not affected by read time updated",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedArrivalTime",
            "description": "Expected time of arrival at quay. Updated with real time information if\navailable. Will be null if an actualArrivalTime exists",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "actualArrivalTime",
            "description": "Actual time of arrival at quay. Updated from real time information if available",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedDepartureTime",
            "description": "Scheduled time of departure from quay. Not affected by read time updated",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedDepartureTime",
            "description": "Expected time of departure from quay. Updated with real time information if\navailable. Will be null if an actualDepartureTime exists",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "actualDepartureTime",
            "description": "Actual time of departure from quay. Updated with real time information if available",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedArrival",
            "description": "Scheduled time of arrival at quay. Not affected by read time updated",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use aimedArrivalTime"
          },
          {
            "name": "expectedArrival",
            "description": "Expected time of arrival at quay. Updated with real time information if available",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use expectedArrivalTime"
          },
          {
            "name": "aimedDeparture",
            "description": "Scheduled time of departure from quay. Not affected by read time updated",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use aimedDepartureTime"
          },
          {
            "name": "expectedDeparture",
            "description": "Expected time of departure from quay. Updated with real time information if available",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use expectedDepartureTime"
          },
          {
            "name": "timingPoint",
            "description": "Whether this is a timing point or not. Boarding and alighting is not allowed at timing points.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "Whether this call has been updated with real time information.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "predictionInaccurate",
            "description": "Whether the updated estimates are expected to be inaccurate.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeState",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "RealtimeState",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forBoarding",
            "description": "Whether vehicle may be boarded at quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forAlighting",
            "description": "Whether vehicle may be alighted at quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestStop",
            "description": "Whether vehicle will only stop on request.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cancellation",
            "description": "Whether stop is cancellation.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "date",
            "description": "The date the estimated call is valid for.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "destinationDisplay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DestinationDisplay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Notice",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all relevant situations for this EstimatedCall.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for flexible service.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexible",
            "description": "Whether this call is part of a flexible trip. This means that arrival or\ndeparture times are not scheduled but estimated within specified operating hours.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TimeAndDayOffset",
        "description": null,
        "fields": [
          {
            "name": "time",
            "description": "Local time",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Time",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dayOffset",
            "description": "Number of days offset from base line time",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Time",
        "description": "Time using the format: HH:mm:ss. Example: 18:25:43",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RealtimeState",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "scheduled",
            "description": "The service journey information comes from the regular time table, i.e. no real-time update has been applied.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updated",
            "description": "The service journey information has been updated, but the journey pattern\nstayed the same as the journey pattern of the scheduled service journey.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "canceled",
            "description": "The service journey has been canceled by a real-time update.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "Added",
            "description": "The service journey has been added using a real-time update, i.e. the service\njourney was not present in the regular time table.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "modified",
            "description": "The service journey information has been updated and resulted in a different\njourney pattern compared to the journey pattern of the scheduled service journey.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Date",
        "description": "Date  using the format: yyyy-MM-dd. Example: 2017-04-23",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ServiceJourney",
        "description": "A planned vehicle journey with passengers.",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Line",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "activeDates",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceAlteration",
            "description": "Whether journey is as planned, a cancellation or an extra journey. Default is as planned",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "ServiceAlteration",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": "The transport submode of the journey, if different from lines transport submode.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": "Publicly announced code for service journey, differentiating it from other service journeys for the same line.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "privateCode",
            "description": "For internal use by operators.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "linePublicCode",
            "description": "Publicly announced code for line, differentiating it from other lines for the same operator.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use line.publicCode instead."
          },
          {
            "name": "operator",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directionType",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "DirectionType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairAccessible",
            "description": "Whether service journey is accessible with wheelchair.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAllowed",
            "description": "Whether bikes are allowed on service journey.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BikesAllowed",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPattern",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "JourneyPattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Quays visited by service journey",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Quay",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "passingTimes",
            "description": "Returns scheduled passing times only - without realtime-updates, for realtime-data use 'estimatedCalls'",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TimetabledPassingTime",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "estimatedCalls",
            "description": "Returns scheduled passingTimes for this ServiceJourney for a given date,\nupdated with realtime-updates (if available). NB! This takes a date as\nargument (default=today) and returns estimatedCalls for that date and should\nonly be used if the date is known when creating the request. For fetching\nestimatedCalls for a given trip.leg, use leg.serviceJourneyEstimatedCalls instead.",
            "args": [
              {
                "name": "date",
                "description": "Date to get estimated calls for. Defaults to today.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "EstimatedCall",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": "Detailed path travelled by service journey.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Notice",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the service journey",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "keyValues",
            "description": "List of keyValue pairs for the service journey.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "KeyValue",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleServiceType",
            "description": "Type of flexible service, or null if service is not flexible.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "FlexibleServiceType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for flexible services.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Line",
        "description": "A group of routes which is generally known to the public by a similar name or number",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "organisation",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Organisation",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use 'authority' instead."
          },
          {
            "name": "publicCode",
            "description": "Publicly announced code for line, differentiating it from other lines for the same operator.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportMode",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportMode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "presentation",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Presentation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAllowed",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BikesAllowed",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPatterns",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "JourneyPattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Notice",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the line",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "keyValues",
            "description": "List of keyValue pairs for the line.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "KeyValue",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleLineType",
            "description": "Type of flexible line, or null if line is not flexible.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "FlexibleLineType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for flexible line.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Authority",
        "description": "Authority involved in public transportation. An organisation under which the\nresponsibility of organising the transport service in a certain area is placed.",
        "fields": [
          {
            "name": "id",
            "description": "Authority id",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lang",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fareUrl",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the authority",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PtSituationElement",
        "description": "Simple public transport situation element",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": "Get affected authority for this situation element",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "organisation",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Organisation",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use 'authority' instead."
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneys",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StopPlace",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "journeyPatterns",
            "description": "Get all journey patterns for this situation element",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "JourneyPattern",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "summary",
            "description": "Summary of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": "Description of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "detail",
            "description": "Details of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Not allowed according to profile. Use ´advice´ instead."
          },
          {
            "name": "advice",
            "description": "Advice of situation in all different translations available",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MultilingualString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "infoLink",
            "description": "Url with more information",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use the attribute infoLinks instead."
          },
          {
            "name": "infoLinks",
            "description": "Optional links to more information.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "infoLink",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "validityPeriod",
            "description": "Period this situation is in effect",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ValidityPeriod",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "reportType",
            "description": "ReportType of this situation",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "ReportType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopConditions",
            "description": "StopConditions of this situation",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "StopCondition",
                  "ofType": null
                }
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Temporary attribute used for data-verification."
          },
          {
            "name": "situationNumber",
            "description": "Operator's internal id for this situation",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "severity",
            "description": "Severity of this situation ",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Severity",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "reportAuthority",
            "description": "Authority that reported this situation",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Not yet officially supported. May be removed or renamed."
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Organisation",
        "description": "Deprecated! Replaced by authority and operator.",
        "fields": [
          {
            "name": "id",
            "description": "Organisation id",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lang",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fareUrl",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the organisation",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "JourneyPattern",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Line",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directionType",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "DirectionType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "destinationDisplay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DestinationDisplay",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Get destinationDisplay from estimatedCall or timetabledPassingTime instead. DestinationDisplay from JourneyPattern is not correct according to model, will give misleading results in some cases and will be removed!"
          },
          {
            "name": "serviceJourneys",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ServiceJourney",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneysForDate",
            "description": "List of service journeys for the journey pattern for a given date",
            "args": [
              {
                "name": "date",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Date",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ServiceJourney",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quays",
            "description": "Quays visited by service journeys for this journey patterns",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Quay",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "Get all situations active for the journey pattern",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Notice",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "DirectionType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "unknown",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "outbound",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inbound",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "clockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "anticlockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DestinationDisplay",
        "description": "An advertised destination of a specific journey pattern, usually displayed on a head sign or at other on-board locations.",
        "fields": [
          {
            "name": "frontText",
            "description": "Name of destination to show on front of vehicle.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PointsOnLink",
        "description": "A list of coordinates encoded as a polyline string (see\nhttp://code.google.com/apis/maps/documentation/polylinealgorithm.html)",
        "fields": [
          {
            "name": "length",
            "description": "The number of points in the string",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "points",
            "description": "The encoded points of the polyline. Be aware that the string could contain\nescape characters that need to be accounted for.\n(https://www.freeformatter.com/javascript-escape.html)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Notice",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "text",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicCode",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "MultilingualString",
        "description": "Text with language",
        "fields": [
          {
            "name": "value",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "language",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "infoLink",
        "description": null,
        "fields": [
          {
            "name": "uri",
            "description": "URI",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "label",
            "description": "Label",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "ValidityPeriod",
        "description": null,
        "fields": [
          {
            "name": "startTime",
            "description": "Start of validity period",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endTime",
            "description": "End of validity period",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ReportType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "general",
            "description": "Indicates a general info-message that should not affect trip.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "incident",
            "description": "Indicates an incident that may affect trip.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "StopCondition",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "destination",
            "description": "Situation applies when stop is the destination of the leg.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startPoint",
            "description": "Situation applies when stop is the startpoint of the leg.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "exceptionalStop",
            "description": "Situation applies when transfering to another leg at the stop.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notStopping",
            "description": "Situation applies when passing the stop, without stopping.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestStop",
            "description": "Situation applies when at the stop, and the stop requires a request to stop.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Severity",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "unknown",
            "description": "Situation has unknown impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noImpact",
            "description": "Situation has no impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "verySlight",
            "description": "Situation has a very slight impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slight",
            "description": "Situation has a slight impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "normal",
            "description": "Situation has an impact on trips (default).",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "severe",
            "description": "Situation has a severe impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "verySevere",
            "description": "Situation has a very severe impact on trips.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "undefined",
            "description": "Severity is undefined.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Operator",
        "description": "Organisation providing public transport services.",
        "fields": [
          {
            "name": "id",
            "description": "Operator id",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "branding",
            "description": "Branding for operator.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Branding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lines",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Line",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ServiceJourney",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Branding",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Full name to be used for branding.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": "Description of branding.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": "URL to be used for branding",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "image",
            "description": "URL to an image be used for branding",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Presentation",
        "description": "Types describing common presentation properties",
        "fields": [
          {
            "name": "colour",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "textColour",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BikesAllowed",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "noInformation",
            "description": "There is no bike information for the trip.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allowed",
            "description": "The vehicle being used on this particular trip can accommodate at least one bicycle.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notAllowed",
            "description": "No bicycles are allowed on this trip.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "KeyValue",
        "description": null,
        "fields": [
          {
            "name": "key",
            "description": "Identifier of value.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "value",
            "description": "The actual value",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "typeOfKey",
            "description": "Identifier of type of key",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "FlexibleLineType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "corridorService",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mainRouteWithFlexibleEnds",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexibleAreasOnly",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hailAndRideSections",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fixedStopAreaWide",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "freeAreaAreaWide",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mixedFlexible",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mixedFlexibleAndFixed",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fixed",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BookingArrangement",
        "description": null,
        "fields": [
          {
            "name": "bookingAccess",
            "description": "Who has access to book service?",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BookingAccess",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingMethods",
            "description": "How should service be booked?",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "BookingMethod",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookWhen",
            "description": "When should service be booked?",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "PurchaseWhen",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latestBookingTime",
            "description": "Latest time service can be booked. ISO 8601 timestamp",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "LocalTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "minimumBookingPeriod",
            "description": "Minimum period in advance service can be booked as a ISO 8601 duration",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingNote",
            "description": "Textual description of booking arrangement for service",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "buyWhen",
            "description": "When should ticket be purchased?",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "PurchaseMoment",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingContact",
            "description": "Who should ticket be contacted for booking",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Contact",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BookingAccess",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "publicAccess",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorisedPublic",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "staff",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BookingMethod",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "callDriver",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "callOffice",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "online",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phoneAtStop",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "text",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "none",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "PurchaseWhen",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "timeOfTravelOnly",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dayOfTravelOnly",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "untilPreviousDay",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "advanceOnly",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "advanceAndDayOfTravel",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "LocalTime",
        "description": "Time using the format: HH:mm:SS. Example: 18:25:SS",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "PurchaseMoment",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "onReservation",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "beforeBoarding",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "onBoarding",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "afterBoarding",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "onCheckOut",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Contact",
        "description": null,
        "fields": [
          {
            "name": "contactPerson",
            "description": "Name of person to contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email",
            "description": "Email adress for contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": "Url for contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": "Phone number for contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "furtherDetails",
            "description": "Textual description of how to get in contact",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "ServiceAlteration",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "planned",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cancellation",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "extraJourney",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TimetabledPassingTime",
        "description": "Scheduled passing times. These are not affected by real time updates.",
        "fields": [
          {
            "name": "quay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "arrival",
            "description": "Scheduled time of arrival at quay",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departure",
            "description": "Scheduled time of departure from quay",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "TimeAndDayOffset",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timingPoint",
            "description": "Whether this is a timing point or not. Boarding and alighting is not allowed at timing points.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forBoarding",
            "description": "Whether vehicle may be boarded at quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "forAlighting",
            "description": "Whether vehicle may be alighted at quay.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "requestStop",
            "description": "Whether vehicle will only stop on request.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "destinationDisplay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "DestinationDisplay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notices",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Notice",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": "Booking arrangements for flexible service.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "FlexibleServiceType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "dynamicPassingTimes",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fixedHeadwayFrequency",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fixedPassingTimes",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "notFlexible",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "other",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "StopType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "regular",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "flexible_area",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Coordinates",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BikeRentalStation",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeOccupancyAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allowDropoff",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "networks",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BikePark",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CarPark",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "capacity",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "capacityHandicap",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailableHandicap",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "capacityRecharging",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailableRecharging",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeOccupancyAvailable",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TripPattern",
        "description": "List of legs constituting a suggested sequence of rides and links for a specific trip.",
        "fields": [
          {
            "name": "startTime",
            "description": "Time that the trip departs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endTime",
            "description": "Time that the trip arrives.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "duration",
            "description": "Duration of the trip, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitingTime",
            "description": "How much time is spent waiting for transit to arrive, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "Total distance for the trip, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkTime",
            "description": "How much time is spent walking, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkDistance",
            "description": "How far the user has to walk, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "legs",
            "description": "A list of legs. Each leg is either a walking (cycling, car) portion of the\ntrip, or a ride leg on a particular vehicle. So a trip where the use walks to\nthe Q train, transfers to the 6, then walks to their destination, has four legs.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Leg",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "weight",
            "description": "Weight of the itinerary. Used for debugging.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Long",
        "description": "Long type",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Leg",
        "description": "Part of a trip pattern. Either a ride on a public transport vehicle or access or path link to/from/between places",
        "fields": [
          {
            "name": "startTime",
            "description": "The date and time this leg begins.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Replaced with expectedStartTime"
          },
          {
            "name": "endTime",
            "description": "The date and time this leg ends.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Replaced with expectedEndTime"
          },
          {
            "name": "aimedStartTime",
            "description": "The aimed date and time this leg starts.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedStartTime",
            "description": "The expected, realtime adjusted date and time this leg starts.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "aimedEndTime",
            "description": "The aimed date and time this leg ends.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "expectedEndTime",
            "description": "The expected, realtime adjusted date and time this leg ends.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "DateTime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mode",
            "description": "The mode of transport or access (e.g., foot) used when traversing this leg.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Mode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transportSubmode",
            "description": "The transport sub mode (e.g., localBus or expressBus) used when traversing this leg. Null if leg is not a ride",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "TransportSubmode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "duration",
            "description": "The legs's duration in seconds",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pointsOnLink",
            "description": "The legs's geometry.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PointsOnLink",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authority",
            "description": "For ride legs, the service authority used for this legs. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Authority",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "operator",
            "description": "For ride legs, the operator used for this legs. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Operator",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "organisation",
            "description": "For ride legs, the transit organisation that operates the service used for this legs. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Organisation",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use 'authority' instead."
          },
          {
            "name": "realTime",
            "description": "Whether there is real-time data about this leg",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Should not be camelCase. Use realtime instead."
          },
          {
            "name": "realtime",
            "description": "Whether there is real-time data about this leg",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "The distance traveled while traversing the leg in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ride",
            "description": "Whether this leg is a ride leg or not.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rentedBike",
            "description": "Whether this leg is with a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fromPlace",
            "description": "The Place where the leg originates.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toPlace",
            "description": "The Place where the leg ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fromEstimatedCall",
            "description": "EstimatedCall for the quay where the leg originates.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "EstimatedCall",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "toEstimatedCall",
            "description": "EstimatedCall for the quay where the leg ends.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "EstimatedCall",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "line",
            "description": "For ride legs, the line. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourney",
            "description": "For ride legs, the service journey. For non-ride legs, null.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediateQuays",
            "description": "For ride legs, intermediate quays between the Place where the leg originates\nand the Place where the leg ends. For non-ride legs, empty list.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Quay",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediateEstimatedCalls",
            "description": "For ride legs, estimated calls for quays between the Place where the leg\noriginates and the Place where the leg ends. For non-ride legs, empty list.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "EstimatedCall",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceJourneyEstimatedCalls",
            "description": "For ride legs, all estimated calls for the service journey. For non-ride legs, empty list.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "EstimatedCall",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "via",
            "description": "Do we continue from a specified via place",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "situations",
            "description": "All relevant situations for this leg",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PtSituationElement",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "steps",
            "description": "Do we continue from a specified via place",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PathGuidance",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interchangeFrom",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Interchange",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interchangeTo",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Interchange",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookingArrangements",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BookingArrangement",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PathGuidance",
        "description": "A series of turn by turn instructions used for walking, biking and driving.",
        "fields": [
          {
            "name": "distance",
            "description": "The distance in meters that this step takes.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "relativeDirection",
            "description": "The relative direction of this step.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "RelativeDirection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "streetName",
            "description": "The name of the street.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "heading",
            "description": "The absolute direction of this step.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "AbsoluteDirection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "exit",
            "description": "When exiting a highway or traffic circle, the exit name/number.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stayOn",
            "description": "Indicates whether or not a street changes direction at an intersection.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "area",
            "description": "This step is on an open area, such as a plaza or train platform, and thus the directions should say something like \"cross\"",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bogusName",
            "description": "The name of this street was generated by the system, so we should only display\nit once, and generally just display right/left directions",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "latitude",
            "description": "The latitude of the step.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longitude",
            "description": "The longitude of the step.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "legStepText",
            "description": "Direction information as readable text.",
            "args": [
              {
                "name": "locale",
                "description": null,
                "type": {
                  "kind": "ENUM",
                  "name": "Locale",
                  "ofType": null
                },
                "defaultValue": "no"
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RelativeDirection",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "depart",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hardLeft",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "left",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slightlyLeft",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "continue",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "slightlyRight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "right",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hardRight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "circleClockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "circleCounterclockwise",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevator",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "uturnLeft",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "uturnRight",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AbsoluteDirection",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "north",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "northeast",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "east",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "southeast",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "south",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "southwest",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "west",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "northwest",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Interchange",
        "description": null,
        "fields": [
          {
            "name": "staySeated",
            "description": "The Line/Route/ServiceJourney changes, but the passenger can stay seated.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "guaranteed",
            "description": "The interchange is guaranteed by the operator(s). Usually up to a maximum wait time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FromLine",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ToLine",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Line",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FromServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ToServiceJourney",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "ServiceJourney",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "debugOutput",
        "description": null,
        "fields": [
          {
            "name": "totalTime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "MultiModalMode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "parent",
            "description": "Multi modal parent stop places without their mono modal children.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "child",
            "description": "Only mono modal children stop places, not their multi modal parent stop",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "all",
            "description": "Both multiModal parents and their mono modal child stop places.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "quayAtDistanceConnection",
        "description": "A connection to a list of items.",
        "fields": [
          {
            "name": "edges",
            "description": "a list of edges",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "quayAtDistanceEdge",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "details about this specific page",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "quayAtDistanceEdge",
        "description": "An edge in a connection",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "QuayAtDistance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "cursor marks a unique position or index into the connection",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "QuayAtDistance",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "quay",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Quay",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PageInfo",
        "description": "Information about pagination in a connection.",
        "fields": [
          {
            "name": "hasNextPage",
            "description": "When paginating forwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPreviousPage",
            "description": "When paginating backwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startCursor",
            "description": "When paginating backwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endCursor",
            "description": "When paginating forwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "FilterPlaceType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "quay",
            "description": "Quay",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopPlace",
            "description": "StopPlace",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bicycleRent",
            "description": "Bicycle rent stations",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "Bike parks",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carPark",
            "description": "Car parks",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputFilters",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "quays",
            "description": "Quays to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "lines",
            "description": "Lines to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bikeRentalStations",
            "description": "Bike rentals to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bikeParks",
            "description": "Bike parks to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "carParks",
            "description": "Car parks to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistanceConnection",
        "description": "A connection to a list of items.",
        "fields": [
          {
            "name": "edges",
            "description": "a list of edges",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "placeAtDistanceEdge",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "details about this specific page",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistanceEdge",
        "description": "An edge in a connection",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PlaceAtDistance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": "cursor marks a unique position or index into the connection",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PlaceAtDistance",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Id is not referable or meaningful and will be removed"
          },
          {
            "name": "place",
            "description": null,
            "args": [],
            "type": {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "RoutingParameters",
        "description": "The default parameters used in travel searches.",
        "fields": [
          {
            "name": "walkSpeed",
            "description": "Max walk speed along streets, in meters per second",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeSpeed",
            "description": "Max bike speed along streets, in meters per second",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carSpeed",
            "description": "Max car speed along streets, in meters per second",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxWalkDistance",
            "description": "The maximum distance (in meters) the user is willing to walk for access/egress legs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTransferWalkDistance",
            "description": "The maximum distance (in meters) the user is willing to walk for transfer legs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxPreTransitTime",
            "description": "The maximum time (in seconds) of pre-transit travel when using drive-to-transit (park and ride or kiss and ride).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelChairAccessible",
            "description": "Whether the trip must be wheelchair accessible.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "numItineraries",
            "description": "The maximum number of itineraries to return.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxSlope",
            "description": "The maximum slope of streets for wheelchair trips.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "showIntermediateStops",
            "description": "Whether the planner should return intermediate stops lists for transit legs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transferPenalty",
            "description": "An extra penalty added on transfers (i.e. all boardings except the first one).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkReluctance",
            "description": "A multiplier for how bad walking is, compared to being in transit for equal lengths of time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stairsReluctance",
            "description": "Used instead of walkReluctance for stairs.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "turnReluctance",
            "description": "Multiplicative factor on expected turning time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkOnStreetReluctance",
            "description": "How much more reluctant is the user to walk on streets with car traffic allowed.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorBoardTime",
            "description": "How long does it take to get on an elevator, on average.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorBoardCost",
            "description": "What is the cost of boarding a elevator?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorHopTime",
            "description": "How long does it take to advance one floor on an elevator?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevatorHopCost",
            "description": "What is the cost of travelling one floor on an elevator?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalPickupTime",
            "description": "Time to rent a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalPickupCost",
            "description": "Cost to rent a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalDropOffTime",
            "description": "Time to drop-off a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalDropOffCost",
            "description": "Cost to drop-off a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParkTime",
            "description": "Time to park a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParkCost",
            "description": "Cost to park a bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carDropOffTime",
            "description": "Time to park a car in a park and ride, w/o taking into account driving and walking cost.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitReluctance",
            "description": "How much worse is waiting for a transit vehicle than being on a transit vehicle, as a multiplier.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitAtBeginningFactor",
            "description": "How much less bad is waiting at the beginning of the trip (replaces waitReluctance on the first boarding).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkBoardCost",
            "description": "This prevents unnecessary transfers by adding a cost for boarding a vehicle.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeBoardCost",
            "description": "Separate cost for boarding a vehicle with a bicycle, which is more difficult than on foot.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "otherThanPreferredRoutesPenalty",
            "description": "Penalty added for using every route that is not preferred if user set any\nroute as preferred. We return number of seconds that we are willing to wait\nfor preferred route.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transferSlack",
            "description": "A global minimum transfer time (in seconds) that specifies the minimum amount\nof time that must pass between exiting one transit vehicle and boarding another.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "boardSlack",
            "description": "Invariant: boardSlack + alightSlack <= transferSlack.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alightSlack",
            "description": "Invariant: boardSlack + alightSlack <= transferSlack.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxTransfers",
            "description": "Maximum number of transfers returned in a trip plan.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "reverseOptimizeOnTheFly",
            "description": "When true, reverse optimize this search on the fly whenever needed, rather\nthan reverse-optimizing the entire path when it's done.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "compactLegsByReversedSearch",
            "description": "When true, do a full reversed search to compact the legs of the GraphPath.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carDecelerationSpeed",
            "description": "The deceleration speed of an automobile, in meters per second per second.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carAccelerationSpeed",
            "description": "The acceleration speed of an automobile, in meters per second per second.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ignoreRealTimeUpdates",
            "description": "When true, realtime updates are ignored during this search.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "includedPlannedCancellations",
            "description": "When true, service journeys cancelled in scheduled route data will be included during this search.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "disableRemainingWeightHeuristic",
            "description": "If true, the remaining weight heuristic is disabled.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "softWalkLimiting",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "softPreTransitLimiting",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "softWalkPenalty",
            "description": "A jump in cost when stepping over the walking limit.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "softWalkOverageRate",
            "description": "A jump in cost for every meter over the walking limit.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "preTransitPenalty",
            "description": "A jump in cost when stepping over the pre-transit time limit.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "preTransitOverageRate",
            "description": "A jump in cost for every second over the pre-transit time limit.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allowBikeRental",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParkAndRide",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parkAndRide",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "kissAndRide",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rideAndKiss",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "useTraffic",
            "description": "Should traffic congestion be considered when driving?",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "onlyTransitTrips",
            "description": "Accept only paths that use transit (no street-only paths).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "disableAlertFiltering",
            "description": "Option to disable the default filtering of GTFS-RT alerts by time.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "geoIdElevation",
            "description": "Whether to apply the ellipsoid->geoid offset to all elevations in the response.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "preferredInterchangePenalty",
            "description": "Whether to apply the ellipsoid->geoid offset to all elevations in the response.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "recommendedInterchangePenalty",
            "description": "Whether to apply the ellipsoid->geoid offset to all elevations in the response.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interchangeAllowedPenalty",
            "description": "Whether to apply the ellipsoid->geoid offset to all elevations in the response.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noInterchangePenalty",
            "description": "Whether to apply the ellipsoid->geoid offset to all elevations in the response.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "preTransitReluctance",
            "description": "How much worse driving before and after transit is than riding on transit.\nApplies to ride and kiss, kiss and ride and park and ride.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "types",
            "description": "A list of all types supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "queryType",
            "description": "The type that query operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationType",
            "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "subscriptionType",
            "description": "If this server support subscription, the type that subscription operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directives",
            "description": "A list of all directives supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "fields": [
          {
            "name": "kind",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "__TypeKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Field",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interfaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possibleTypes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enumValues",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__EnumValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputFields",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ofType",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCALAR",
            "description": "Indicates this type is a scalar.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Indicates this type is an enum. `enumValues` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Indicates this type is an input object. `inputFields` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LIST",
            "description": "Indicates this type is a list. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NON_NULL",
            "description": "Indicates this type is a non-null. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultValue",
            "description": "A GraphQL-formatted string representing the default value for this input value.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__DirectiveLocation",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUERY",
            "description": "Location adjacent to a query operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MUTATION",
            "description": "Location adjacent to a mutation operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTION",
            "description": "Location adjacent to a subscription operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD",
            "description": "Location adjacent to a field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_DEFINITION",
            "description": "Location adjacent to a fragment definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_SPREAD",
            "description": "Location adjacent to a fragment spread.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INLINE_FRAGMENT",
            "description": "Location adjacent to an inline fragment.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "VARIABLE_DEFINITION",
            "description": "Location adjacent to a variable definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCHEMA",
            "description": "Location adjacent to a schema definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCALAR",
            "description": "Location adjacent to a scalar definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Location adjacent to an object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD_DEFINITION",
            "description": "Location adjacent to a field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ARGUMENT_DEFINITION",
            "description": "Location adjacent to an argument definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Location adjacent to an interface definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Location adjacent to a union definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Location adjacent to an enum definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM_VALUE",
            "description": "Location adjacent to an enum value definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Location adjacent to an input object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_FIELD_DEFINITION",
            "description": "Location adjacent to an input object field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      }
    ],
    "directives": [
      {
        "name": "defer",
        "description": "This directive allows results to be deferred during execution",
        "locations": [
          "FIELD"
        ],
        "args": []
      },
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "deprecated",
        "description": "Marks an element of a GraphQL schema as no longer supported.",
        "locations": [
          "FIELD_DEFINITION",
          "ENUM_VALUE"
        ],
        "args": [
          {
            "name": "reason",
            "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": "\"No longer supported\""
          }
        ]
      }
    ]
  }
}