apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.apollographql.android'

android {

    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "hansffu.ontime"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 15
        versionName "2.0"

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    apollo {
        customTypeMapping = [
                "DateTime" : "java.lang.String"
        ]
    }

    signingConfigs {
        release  
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    def localProps = new Properties()
    def isRunningOnTravis = System.getenv("CI") == "true"

    if (isRunningOnTravis) {
        signingConfigs.release.storeFile = file("../hansffu_upload_key.jks")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = System.getenv("keystore_alias")
        signingConfigs.release.keyPassword = System.getenv("keystore_alias_password")

    } else if (file('../local.properties').exists()) {
        localProps.load(new FileInputStream(file('../local.properties')))
        def keyProps = new Properties()
        if (localProps['keystore.props.file'] != null) {
            keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
        }
        signingConfigs.release.storeFile = keyProps["store"] != null ? file(keyProps["store"]) : null
        signingConfigs.release.keyAlias = keyProps["alias"]
        signingConfigs.release.storePassword = keyProps["storePass"]
        signingConfigs.release.keyPassword = keyProps["pass"]
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.google.android.support:wearable:2.4.0'
    compileOnly 'com.google.android.wearable:wearable:2.4.0'
    implementation 'com.google.android.gms:play-services-wearable:16.0.1'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:percent:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:wear:28.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'com.patloew.rxlocation:rxlocation:1.0.5'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-rx2-support:$apollo_version"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    compileOnly 'org.jetbrains:annotations:13.0'
    testCompileOnly 'org.jetbrains:annotations:13.0'
}
repositories {
    mavenCentral()
}
